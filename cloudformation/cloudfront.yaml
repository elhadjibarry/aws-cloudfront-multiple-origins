Description:  This template deploys a CloudFront distribution with an application load balancer as the origin.
  The CloudFront distribution is configured with two origins (primary and failover) and an origin group for failover handling.
  The template also creates a Route 53 record for the CloudFront distribution.

#Parameters to be passed to the template at the time of deployment. 
#You can pass these parameters through the AWS Management Console, AWS CLI, or AWS SDKs.
#You can customize these parameters or use the default values at the time of deployment.
Parameters:
  ProjectName:
    Description: The project name that is prefixed to resource names
    Type: String
    Default: CloudFront

  # Add a parameter for the CloudFront price class
  # The price class determines the edge locations that are used for caching content.
  # You can choose from PriceClass_100, PriceClass_200, or PriceClass_All.
  # PriceClass_100 uses the least expensive edge locations, PriceClass_200 uses more edge locations, and PriceClass_All uses all edge locations.
  CloudFrontPriceClass:
    Description: The price class for the CloudFront distribution
    Type: String
    Default: PriceClass_All
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    ConstraintDescription: Must be a valid CloudFront price class.

  PrimaryApplicationLoadBalancerURL:
    Description: The URL of the primary application load balancer (Output of the web-app stack in the primary region)
    Type: String

  FailOverApplicationLoadBalancerURL:
    Description: The URL of the failover application load balancer (Output of the web-app stack in the failover region)
    Type: String

  DomainName:
    Description: The domain name to create a Route 53 record for the CloudFront distribution alias
    Type: String
    
  HostedZoneId:
    Description: The ID of the Route 53 hosted zone to create a Route 53 record for the CloudFront distribution alias
    Type: String

#Resources are the core of the template. They represent the different AWS components that will be created when the template is deployed.
#All the resources are tagged with the project name to easily identify them in the AWS Management Console and for billing purposes.
Resources:

  # Add a certificate to enable HTTPS for the CloudFront distribution.
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-Certificate

  # Add CloudFront distribution with two origins (primary and failover) and an origin group for failover handling.
  # The CloudFront distribution is configured with a custom header for the origins.
  # The CloudFront distribution is also configured with a cache policy for caching disabled to easily test the failover behavior.
  # The CloudFront distribution is configured with a custom SSL certificate to enable HTTPS.
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - !Ref DomainName
        Origins:
          - Id: PrimaryOrigin
            DomainName: !Ref PrimaryApplicationLoadBalancerURL
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: match-viewer
            OriginCustomHeaders:
              - HeaderName: X-MyCustom-Header
                HeaderValue: my-random-value
          - Id: FailOverOrigin
            DomainName: !Ref FailOverApplicationLoadBalancerURL
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: match-viewer
            OriginCustomHeaders:
              - HeaderName: X-MyCustom-Header
                HeaderValue: my-random-value
        OriginGroups:
          Quantity: 1
          Items:
            - Id: OriginGroup
              FailoverCriteria:
                StatusCodes:
                  Quantity: 4
                  Items:
                    - 500
                    - 502
                    - 503
                    - 504
              Members:
                Quantity: 2
                Items:
                  - OriginId: PrimaryOrigin
                  - OriginId: FailOverOrigin
        DefaultCacheBehavior:
          TargetOriginId: OriginGroup
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # AWS managed policy for CachingDisabled
        PriceClass: !Ref CloudFrontPriceClass
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
        Comment: !Sub "${ProjectName} CloudFront Distribution"

  # Add Route 53 record to map the domain name to the CloudFront distribution.
  CloudFrontRoute53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront hosted zone ID
      Comment: !Sub "${ProjectName} CloudFront Route 53 Record"

# Outputs section of the template allows you to define the outputs of the template that you want to be displayed after the stack is created.
# In this template, we are outputting the domain name of the website to easily access the CloudFront distribution.
Outputs:

  Route53Record:
    Description: The domain name of the website to access the CloudFront distribution
    Value: !Sub "https://${DomainName}"